{{- define "csi_attacher_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- define "linstor_csi_plugin_resources" }}
cpu: 35m
memory: 50Mi
{{- end }}

{{- define "csi_livenessprobe_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- define "csi_node_driver_registrar_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- $kubeVersion := semver .Values.global.discovery.kubernetesVersion -}}
{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: linstor-csi-node
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-csi-node" "workload-resource-policy.deckhouse.io" "every-node")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: linstor-csi-node
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: linstor-csi-plugin
      minAllowed:
        {{- include "linstor_csi_plugin_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 70m
        memory: 100Mi
    - containerName:  csi-livenessprobe
      minAllowed:
        {{- include "csi_livenessprobe_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 50Mi
    - containerName: csi-node-driver-registrar
      minAllowed:
        {{- include "csi_node_driver_registrar_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 50Mi
{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: linstor-csi-node
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "linstor-csi-node")) | nindent 2 }}
spec:
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: linstor-csi-node
  template:
    metadata:
      labels:
        app: linstor-csi-node
      name: linstor-csi-node
      namespace: d8-{{ .Chart.Name }}
    spec:
      {{- include "helm_lib_tolerations" (tuple . "any-node" "storage-problems") | nindent 6 }}
      {{- include "helm_lib_priority_class" (tuple . "cluster-medium") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
{{- if dig "dataNodes" "nodeSelector" false .Values.linstor }}
      nodeSelector:
        storage.deckhouse.io/sds-drbd-node: ""
{{- end }}
      affinity: {}
      containers:
      - args:
          - --v=5
          - --csi-address=$(CSI_ENDPOINT)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
        env:
          - name: CSI_ENDPOINT
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/linstor.csi.linbit.com/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: LS_CONTROLLERS
            value: https://linstor.d8-{{ .Chart.Name }}.svc:3371
          - name: LS_ROOT_CA
            valueFrom:
              secretKeyRef:
                key: ca.crt
                name: linstor-client-https-cert
          - name: LS_USER_CERTIFICATE
            valueFrom:
              secretKeyRef:
                key: tls.crt
                name: linstor-client-https-cert
          - name: LS_USER_KEY
            valueFrom:
              secretKeyRef:
                key: tls.key
                name: linstor-client-https-cert
        image: {{ include "helm_lib_module_common_image" (list . (list "csiNodeDriverRegistrar" $kubeVersion.Major $kubeVersion.Minor | join "" )) }}
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
                - /bin/sh
                - -c
                - rm -rf /registration/linstor.csi.linbit.com /registration/linstor.csi.linbit.com-reg.sock
        name: csi-node-driver-registrar
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "csi_attacher_resources" . | nindent 12 }}
{{- end }}
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
              - SYS_ADMIN
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /csi/
            name: plugin-dir
          - mountPath: /registration/
            name: registration-dir
      - args:
          - --csi-address=$(CSI_ENDPOINT)
        env:
          - name: CSI_ENDPOINT
            value: /csi/csi.sock
        image: {{ include "helm_lib_module_common_image" (list . (list "csiLivenessprobe" $kubeVersion.Major $kubeVersion.Minor | join "" )) }}
        imagePullPolicy: IfNotPresent
        name: csi-livenessprobe
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /csi/
            name: plugin-dir
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "csi_livenessprobe_resources" . | nindent 12 }}
{{- end }}
      - args:
          - --csi-endpoint=unix://$(CSI_ENDPOINT)
          - --node=$(KUBE_NODE_NAME)
          - --linstor-endpoint=$(LS_CONTROLLERS)
          - --log-level=info
        env:
          - name: CSI_ENDPOINT
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/linstor.csi.linbit.com/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: LS_CONTROLLERS
            value: https://linstor.d8-{{ .Chart.Name }}.svc:3371
          - name: LS_ROOT_CA
            valueFrom:
              secretKeyRef:
                key: ca.crt
                name: linstor-client-https-cert
          - name: LS_USER_CERTIFICATE
            valueFrom:
              secretKeyRef:
                key: tls.crt
                name: linstor-client-https-cert
          - name: LS_USER_KEY
            valueFrom:
              secretKeyRef:
                key: tls.key
                name: linstor-client-https-cert
        image: {{ include "helm_lib_module_image" (list . "linstorCsi") }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 9808
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: linstor-csi-plugin
        ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "linstor_csi_plugin_resources" . | nindent 12 }}
{{- end }}
        securityContext:
          capabilities:
            add:
              - SYS_ADMIN
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /csi/
            name: plugin-dir
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: publish-dir
          - mountPath: /dev
            name: device-dir
      dnsPolicy: ClusterFirstWithHostNet
      imagePullSecrets:
        - name: deckhouse-registry
      initContainers:
      - command:
          - /linstor-wait-until
          - satellite-online
          - $(KUBE_NODE_NAME)
        env:
          - name: CSI_ENDPOINT
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/linstor.csi.linbit.com/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: LS_CONTROLLERS
            value: https://linstor.d8-{{ .Chart.Name }}.svc:3371
          - name: LS_ROOT_CA
            valueFrom:
              secretKeyRef:
                key: ca.crt
                name: linstor-client-https-cert
          - name: LS_USER_CERTIFICATE
            valueFrom:
              secretKeyRef:
                key: tls.crt
                name: linstor-client-https-cert
          - name: LS_USER_KEY
            valueFrom:
              secretKeyRef:
                key: tls.key
                name: linstor-client-https-cert
        image: {{ include "helm_lib_module_image" (list . "linstorCsi") }}
        imagePullPolicy: IfNotPresent
        name: linstor-wait-node-online
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "csi_attacher_resources" . | nindent 12 }}
{{- end }}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - hostPath:
            path: /dev
            type: ""
          name: device-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/linstor.csi.linbit.com
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: publish-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: DirectoryOrCreate
          name: registration-dir
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
